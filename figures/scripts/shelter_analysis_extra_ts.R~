#======================================================================================
# Author: Sean Cavany
# project: Outbreak response
# Year: 2019
# 
# Code to analyze the output of the agent based model following space spraying
#
# Files needed:
#======================================================================================
library(lattice)
library(stringr)
library(vioplot)
library(viridis)
library(gridExtra)
library(fields)
directory <- "~/Documents/zika_project/shelter_in_place/abm_output/"
foi.outname <- "foi"
## none.folder <- 'shelter_none'
## analysis.folders <- c("shelter_march17")
## monthly.folders <- c("shelter_01low","shelter_01high")
## all.folder <- "shelter_all"
## suffixes <- c("/", "_2/")

n.sims <- 400
n.batches <- 1
## yearly.cats <- 8
## none.cats <- 4
monthly.cats <- 12
## n.cats <- c(yearly.cats)
## names(n.cats) <- analysis.folders
n.outputs <- 1

##analysis - load output
setwd(directory)
load("scripts/shelter_analysis_ts.RData",verbose=T)
load("scripts/shelter_analysis_extra_ts.RData",verbose=T)
monthly.folders <- names(mon.extra.ts)

## process timeseries
med.none.ts <- apply(none.ts, 1, median)
low.none.ts <- apply(none.ts, 1,
                     function(x) quantile(x, 0.05))
upp.none.ts <- apply(none.ts, 1,
                     function(x) quantile(x, 0.95))

med.mon.ts <- lapply(mon.ts,
                     function(x) apply(x, c(1,3), median))
low.mon.ts <- lapply(mon.ts,
                     function(x) apply(x, c(1,3),
                                       function(y) quantile(y, 0.05,na.rm=TRUE)))
upp.mon.ts <- lapply(mon.ts,
                     function(x) apply(x, c(1,3),
                                       function(y) quantile(y, 0.95,na.rm=TRUE)))

med.tot.ts <- lapply(tot.ts,
                     function(x) apply(x, c(1,3), median))
low.tot.ts <- lapply(tot.ts,
                     function(x) apply(x, c(1,3),
                                       function(y) quantile(y, 0.05,na.rm=TRUE)))
upp.tot.ts <- lapply(tot.ts,
                     function(x) apply(x, c(1,3),
                                       function(y) quantile(y, 0.95,na.rm=TRUE)))

med.mon.extra.ts <- lapply(mon.extra.ts,
                     function(x) apply(x, c(1,3), median))
low.mon.extra.ts <- lapply(mon.extra.ts,
                     function(x) apply(x, c(1,3),
                                       function(y) quantile(y, 0.05)))
upp.mon.extra.ts <- lapply(mon.extra.ts,
                     function(x) apply(x, c(1,3),
                                       function(y) quantile(y, 0.95)))


## none.cum.ts <- apply(none.ts, MARGIN=c(2),FUN=cumsum)
## all.cum.ts <- apply(all.ts, MARGIN=c(2),FUN=cumsum)
## tot.cum.ts <- lapply(tot.ts, function(x) apply(x,c(2,3),cumsum))
## none.bites.cum.ts <- apply(none.bites.ts, MARGIN=c(2),FUN=cumsum)
## all.bites.cum.ts <- apply(all.bites.ts, MARGIN=c(2),FUN=cumsum)
## tot.bites.cum.ts <- lapply(tot.bites.ts, function(x) apply(x,c(2,3),cumsum))
## mon.cum.ts <- lapply(mon.ts, function(x) apply(x,c(2,3),cumsum))

## med.none.cum.ts <- apply(none.cum.ts, c(1), median)
## low.none.cum.ts <- apply(none.cum.ts, c(1),
##                          function(x) quantile(x, 0.05))
## upp.none.cum.ts <- apply(none.cum.ts, c(1),
##                          function(x) quantile(x, 0.95))
## med.none.bites.cum.ts <- apply(none.bites.cum.ts, c(1), median)
## low.none.bites.cum.ts <- apply(none.bites.cum.ts, c(1),
##                          function(x) quantile(x, 0.05))
## upp.none.bites.cum.ts <- apply(none.bites.cum.ts, c(1),
##                          function(x) quantile(x, 0.95))

## med.all.cum.ts <- apply(all.cum.ts, c(1), median)
## low.all.cum.ts <- apply(all.cum.ts, c(1),
##                          function(x) quantile(x, 0.05))
## upp.all.cum.ts <- apply(all.cum.ts, c(1),
##                          function(x) quantile(x, 0.95))
## med.all.bites.cum.ts <- apply(all.bites.cum.ts, c(1), median)
## low.all.bites.cum.ts <- apply(all.bites.cum.ts, c(1),
##                          function(x) quantile(x, 0.05))
## upp.all.bites.cum.ts <- apply(all.bites.cum.ts, c(1),
##                          function(x) quantile(x, 0.95))

## med.tot.cum.ts <- lapply(tot.cum.ts,
##                          function(x) apply(x, c(1,3), median))
## low.tot.cum.ts <- lapply(tot.cum.ts,
##                          function(x) apply(x, c(1,3),
##                                            function(y) quantile(y, 0.05)))
## upp.tot.cum.ts <- lapply(tot.cum.ts,
##                          function(x) apply(x, c(1,3),
##                                            function(y) quantile(y, 0.95)))
## med.tot.bites.cum.ts <- lapply(tot.bites.cum.ts,
##                          function(x) apply(x, c(1,3), median))
## low.tot.bites.cum.ts <- lapply(tot.bites.cum.ts,
##                          function(x) apply(x, c(1,3),
##                                            function(y) quantile(y, 0.05)))
## upp.tot.bites.cum.ts <- lapply(tot.bites.cum.ts,
##                          function(x) apply(x, c(1,3),
##                                            function(y) quantile(y, 0.95)))

## monthly timeseries
month.startday.vec <- c(c(182,213,244,274,305,335),365+c(1,32,60,91,121,152))-182
for (folder in monthly.folders[c(1:4,6)]) {
    tiff(paste0("figures/monthly_timeseries_",folder,".tif"),
         width = 6*600, height =7.4*600,
         compression="lzw", res=600)
    height=4
    layout(t(matrix(c(rep(1,9),rep(rep(2:4,each=3),height),
                      rep(rep(5:7,each=3),height),rep(rep(8:10,each=3),height),
                      rep(rep(11:13,each=3),height)),
                    ncol=1+4*height)))
    par(mar = 0.1+c(0,0,0,0),
        oma = c(4,4,0,1))
    cols <- viridis(5)
    start <- 182 + 365*1
    if (!grepl("imports", folder)){
        end <- 181 + 365*3
    } else {
        end <- 181 + 365*3
    }
    tvec <- seq(as.Date("2001-07-01"),by="1 day",length.out=end-start+1)
    cols.alpha <- viridis(5, alpha=c(0.3, 0.3))
    panels <- c("Jul","Aug","Sep","Oct","Nov","Dec",
                "Jan","Feb","Mar","Apr","May","Jun")
    plot(0, xaxt = 'n', yaxt = 'n', bty = 'n', pch = '', ylab = '', xlab = '')
    if (grepl("imports", folder)){
        legend("center",legend = c("Lockdown", "Lockdown + no imports"),
               col=cols[c(1,3)], lty=1,bty="n",lwd=2,ncol=2,cex=1.25)
    } else if (grepl("nomoz", folder)){
        legend("center",legend = c("Lockdown", "Lockdown + no mosquito movement"),
               col=cols[c(1,3)], lty=1,bty="n",lwd=2,ncol=2,cex=1.25)
    } else if (grepl("immediate", folder)){
        legend("center",legend = c("No lockdown + vector control",
                                   "Lockdown + delayed vector control"),
               col=cols[c(1,3)], lty=1,bty="n",lwd=2,ncol=2,cex=1.25)
    } else if (grepl("vc", folder)){
        legend("center",legend = c("Lockdown + no vector control", "No lockdown + vector control"),
               col=cols[c(1,3)], lty=1,bty="n",lwd=2,ncol=2,cex=1.25)
    }
    par(mar = 0.1+c(1,1,0,0))
    for (i in 1:12){
        shelter.start <- 1 + month.startday.vec[i]
        shelter.end <- shelter.start + floor(3*365/12 + 0.5)
        if (i %in% c(1,4,7,10)) {
            if (grepl("twice", folder)) {
                plot(tvec,rollmean(med.mon.extra.ts[[5]][start:end,i],31,na.pad=T,align="center"),
                     type='l', col=cols[1],
                     ylim=c(0,1.1*max(upp.mon.extra.ts[[5]][start:end,])),
                     xaxt="n",xlab="",ylab="")
                mtext("Infections",2,3)
            } else if (grepl("immediate", folder)) {
                plot(tvec,rollmean(med.mon.extra.ts[[2]][start:end,i],31,na.pad=T,align="center"),
                     type='l', col=cols[1],
                     ylim=c(0,1.1*max(upp.mon.extra.ts[[2]][start:end,])),
                     xaxt="n",xlab="",ylab="")
                mtext("Infections",2,3)
            } else {
                plot(tvec,rollmean(med.mon.ts[[2]][start:end,i],31,na.pad=T,align="center"),
                     type='l', col=cols[1],
                     ylim=c(0,1.1*max(upp.mon.ts[[2]][start:end,])),
                     xaxt="n",xlab="",ylab="")
                mtext("Infections",2,3)
            }
        } else {
            if (grepl("twice", folder)) {
                plot(tvec,rollmean(med.mon.extra.ts[[5]][start:end,i],31,na.pad=T,align="center"),
                     type='l', col=cols[1],
                     ylim=c(0,1.1*max(upp.mon.extra.ts[[5]][(start):end,])),
                     xaxt="n",xlab="",yaxt="n",ylab="")
            } else if (grepl("immediate", folder)) {
                plot(tvec,rollmean(med.mon.extra.ts[[2]][start:end,i],31,na.pad=T,align="center"),
                     type='l', col=cols[1],
                     ylim=c(0,1.1*max(upp.mon.extra.ts[[2]][(start):end,])),
                     xaxt="n",xlab="",yaxt="n",ylab="")
            } else {
                plot(tvec,rollmean(med.mon.ts[[2]][start:end,i],31,na.pad=T,align="center"),
                     type='l', col=cols[1],
                     ylim=c(0,1.1*max(upp.mon.ts[[2]][(start):end,])),
                     xaxt="n",xlab="",yaxt="n",ylab="")
            }
        }
        if (i <=6) {
            text(as.Date("2003-04-01"),
                 1.05*max(upp.mon.ts[[2]][start:end,]),panels[i],
                 cex=1.2)
        } else {
            text(as.Date("2001-09-01"),
                 1.05*max(upp.mon.ts[[2]][(start):end,]),panels[i],
                 cex=1.2)
        }
        if (i %in% 10:12) {
            mtext("Season",1,3)
            axis(1,at=seq(as.Date(paste0("2002-01-01")),by="1 year",length.out=2),
                 tick=F,labels=c("Sero. inv.",expression(italic("following"))))
        }
        axis(1,at=seq(as.Date(paste0("2001-07-01")),by="1 year",length.out=3),
             labels=F)
        CI.col <- cols.alpha[1]
        if (grepl("twice", folder)) {
            polygon(c(tvec, rev(tvec)),
                    c(rollmean(upp.mon.extra.ts[[5]][start:end,i],31,fill=0,na.pad=T,align="center"),
                      rev(rollmean(low.mon.extra.ts[[5]][start:end,i],31,na.pad=T,align="center",
                                   fill=0))),
                    col=CI.col, border=NA)
        } else if (grepl("immediate", folder)) {
            polygon(c(tvec, rev(tvec)),
                    c(rollmean(upp.mon.extra.ts[[2]][start:end,i],31,fill=0,na.pad=T,align="center"),
                      rev(rollmean(low.mon.extra.ts[[2]][start:end,i],31,na.pad=T,align="center",
                                   fill=0))),
                    col=CI.col, border=NA)
        } else {
            polygon(c(tvec, rev(tvec)),
                    c(rollmean(upp.mon.ts[[2]][start:end,i],31,fill=0,na.pad=T,align="center"),
                      rev(rollmean(low.mon.ts[[2]][start:end,i],31,na.pad=T,align="center",fill=0))),
                    col=CI.col, border=NA)
        }
        lines(tvec,rollmean(med.mon.extra.ts[[folder]][start:end,i],31,na.pad=T,align="center",fill=0),
              type='l', col=cols[3], lwd=1.5)
        CI.col <- cols.alpha[3] 
        polygon(c(tvec, rev(tvec)),
                c(rollmean(upp.mon.extra.ts[[folder]][start:end,i],31,fill=0,na.pad=T,align="center"),
                  rev(rollmean(low.mon.extra.ts[[folder]][start:end,i],31,na.pad=T,
                               align="center",fill=0))),
                col=CI.col, border=NA)
        ## polygon(c(tvec[shelter.start:shelter.end],
        ##           rev(tvec[shelter.start:shelter.end])),
        ##         c(rep(0,shelter.end-shelter.start+1),
        ##           rep(2*max(med.none.ts),
        ##               shelter.end-shelter.start+1)),
        ##         col=adjustcolor("grey",alpha.f=0.5),border=F)
        abline(v=tvec[shelter.start],lty="dashed")
        abline(v=tvec[shelter.end],lty="dotted")
        if (grepl("twice", folder)) {
            abline(v=tvec[shelter.start]+365,lty="dashed")
            abline(v=tvec[shelter.end]+365,lty="dotted")
        }
    }
    dev.off()
}

## Plot no imports against baseline
## folder = monthly.folders[grepl("imports",monthly.folders)]
## tiff(paste0("figures/monthly_timeseries_",folder,"_none.tif"),
##      width = 6*600, height =8*600,
##      compression="lzw", res=600)
## height=4 
## layout(t(matrix(c(rep(1,9),rep(rep(2:4,each=3),height),
##                   rep(rep(5:7,each=3),height),rep(rep(8:10,each=3),height),
##                   rep(rep(11:13,each=3),height)),
##                 ncol=1+4*height)))
## par(mar = 0.1+c(0,0,0,0),
##     oma = c(2,4,0,1))
## cols <- viridis(5)
## start <- 182 + 365*1
## end <- 181 + 365*3
## tvec <- seq(as.Date("2001-07-01"),by="1 day",length.out=end-start+1)
## cols.alpha <- viridis(5, alpha=c(0.3, 0.3))
## panels <- c("Jul","Aug","Sep","Oct","Nov","Dec",
##             "Jan","Feb","Mar","Apr","May","Jun")
## plot(0, xaxt = 'n', yaxt = 'n', bty = 'n', pch = '', ylab = '', xlab = '')
## if (grepl("imports", folder)){
##     legend("center",legend = c("No lockdown", "Lockdown + no imports"),
##            col=cols[c(1,3)], lty=1,bty="n",lwd=2,ncol=2,cex=1.25)
## } else if (grepl("nomoz", folder)){
##     legend("center",legend = c("Lockdown", "Lockdown + no mosquito movement"),
##            col=cols[c(1,3)], lty=1,bty="n",lwd=2,ncol=2,cex=1.25)
## } else if (grepl("vc", folder)){
##     legend("center",legend = c("Lockdown + no vector control", "No lockdown + vector control"),
##            col=cols[c(1,3)], lty=1,bty="n",lwd=2,ncol=2,cex=1.25)
## }
## par(mar = 0.1+c(3,1,0,0))
## for (i in 1:12){
##     shelter.start <- 1 + month.startday.vec[i]
##     shelter.end <- shelter.start + floor(3*365/12 + 0.5)
##     if (i %in% c(1,4,7,10)) {
##         plot(tvec,rollmean(med.none.ts[start:end],31,na.pad=T,align="center"),
##              type='l', col=cols[1],
##              ylim=c(0,1.1*max(upp.none.ts[start:end])),
##              xaxt="n",xlab="",ylab="")
##         mtext("Infections",2,3)
##     } else {
##         plot(tvec,rollmean(med.none.ts[start:end],31,na.pad=T,align="center"),
##              type='l', col=cols[1],
##              ylim=c(0,1.1*max(upp.none.ts[(start):end])),
##              xaxt="n",xlab="",yaxt="n",ylab="")
##     }
##     if (i <=6) {
##         text(as.Date("2003-04-01"),
##              1.05*max(upp.none.ts[start:end]),panels[i],
##              cex=1.2)
##     } else {
##         text(as.Date("2001-09-01"),
##              1.05*max(upp.none.ts[(start):end]),panels[i],
##              cex=1.2)
##     }
##     if (i %in% 10:12) {
##         mtext("Season",1,3)
##     }
##     axis(1,at=seq(as.Date(paste0("2001-07-01")),by="1 year",length.out=3),
##          labels=F)
##     axis(1,at=seq(as.Date(paste0("2002-01-01")),by="1 year",length.out=2),
##          tick=F,labels=paste0("200",c(1,2),"-0",c(2,3)))
##     CI.col <- cols.alpha[1] 
##     polygon(c(tvec, rev(tvec)),
##             c(rollmean(upp.none.ts[start:end],31,fill=0,na.pad=T,align="center"),
##               rev(rollmean(low.none.ts[start:end],31,na.pad=T,align="center",fill=0))),
##             col=CI.col, border=NA)
##     lines(tvec,rollmean(med.mon.extra.ts[[folder]][start:end,i],31,na.pad=T,align="center",fill=0),
##           type='l', col=cols[3], lwd=1.5)
##     CI.col <- cols.alpha[3] 
##     polygon(c(tvec, rev(tvec)),
##             c(rollmean(upp.mon.extra.ts[[folder]][start:end,i],31,fill=0,na.pad=T,align="center"),
##               rev(rollmean(low.mon.extra.ts[[folder]][start:end,i],31,na.pad=T,align="center",fill=0))),
##             col=CI.col, border=NA)
##     ## polygon(c(tvec[shelter.start:shelter.end],
##     ##           rev(tvec[shelter.start:shelter.end])),
##     ##         c(rep(0,shelter.end-shelter.start+1),
##     ##           rep(2*max(med.none.ts),
##     ##               shelter.end-shelter.start+1)),
##     ##         col=adjustcolor("grey",alpha.f=0.5),border=F)
##     abline(v=tvec[shelter.start],lty="dashed")
##     abline(v=tvec[shelter.end],lty="dotted")
## }
## dev.off()

##proportional increase for Vector control vs lockdown
start <- 182 + 365*1
end <- 181 + 365*3

ratios <- matrix(rep(NA,1000*12),nrow=1000)
for (i in 1:1000) {
    print(i)
    indices <- sample(1:400,100,replace=TRUE)
    meanA <- apply(apply(mon.ts[[2]][start:end,indices,],c(2,3),sum),2,mean)
    meanB <- apply(apply(mon.extra.ts[[2]][start:end,indices,],c(2,3),sum),2,mean)
    ratios[i,] <- meanA/meanB
}

apply(ratios,2,mean)
apply(ratios,2,function(x)quantile(x,c(0.025,0.25,0.5,0.75,0.975)))


## Plot vector control as ratio.
folder <- "shelter_monthly_none_vc"
tiff(paste0("figures/monthly_timeseries_ratio_",folder,".tif"),
     width = 6*600, height =7.4*600,
     compression="lzw", res=600)
par(mfrow=c(4,3),
    mar = 0.1+c(0,0,0,0),
    oma = c(4,4,1,1))
cols <- viridis(5)
start <- 182 + 365*1
end <- 181 + 365*3
tvec <- seq(as.Date("2001-07-01"),by="1 day",length.out=end-start+1)
cols.alpha <- viridis(5, alpha=c(0.3, 0.3))
panels <- c("Jul","Aug","Sep","Oct","Nov","Dec",
            "Jan","Feb","Mar","Apr","May","Jun")
par(mar = 0.1+c(1,1,0,0))
for (i in 1:12){
    shelter.start <- 1 + month.startday.vec[i]
    shelter.end <- shelter.start + floor(3*365/12 + 0.5)
    vector.control <- rollmean(med.mon.extra.ts[[folder]][,i],31,na.pad=T,align="center",fill=0)[start:end]
    lockdown <- rollmean(med.mon.ts[[2]][,i],31,na.pad=T,align="center")[start:end]
    vector.control[vector.control < 1e-10]  <- NA
    ratio <- lockdown/vector.control
    if (i %in% c(1,4,7,10)) {
        plot(tvec,ratio,
             type='l',log="y",
             ## ylim=c(0,1.1*max(upp.mon.ts[[2]][start:end])),
             xaxt="n",xlab="",ylab="",ylim=c(0.2,20),
             lwd=1)
        mtext("Ratio of infections",2,3)
    } else {
        plot(tvec,ratio,
             type='l', log="y",ylim=c(0.2,20),
             ## ylim=c(0,1.1*max(upp.mon.ts[[2]][(start):end])),
             xaxt="n",xlab="",yaxt="n",ylab="",lwd=1)
    }
    if (i <=6) {
        text(as.Date("2003-04-01"),
             18,panels[i],
             cex=1.2)
    } else {
        text(as.Date("2001-09-01"),
             18,panels[i],
             cex=1.2)
    }
    if (i %in% 10:12) {
        mtext("Season",1,3)
        axis(1,at=seq(as.Date(paste0("2002-01-01")),by="1 year",length.out=2),
             tick=F,labels=c("Sero. inv.",expression(italic("following"))))
    }
    axis(1,at=seq(as.Date(paste0("2001-07-01")),by="1 year",length.out=3),
         labels=F)
    polygon.indexes <- !is.na(ratio)
    polygon(c(tvec[shelter.start:shelter.end],rev(tvec[shelter.start:shelter.end])),
            c(rep(0.01,length(tvec[shelter.start:shelter.end])),
              rep(100,length(tvec[shelter.start:shelter.end]))),
            col=adjustcolor("gray",0.375),border=FALSE)
    polygon(c(tvec[polygon.indexes],rev(tvec[polygon.indexes])),
            c(pmax(1,ratio[polygon.indexes]),rep(1,sum(polygon.indexes))),
            col=adjustcolor("green",0.25),border=FALSE)
    polygon(c(tvec[polygon.indexes],rev(tvec[polygon.indexes])),
            c(pmin(1,ratio[polygon.indexes]),rep(1,length(tvec[polygon.indexes]))),
            col=adjustcolor("red",0.25),border=FALSE)
    ## abline(v=tvec[shelter.start],lty="dashed")
    ## abline(v=tvec[shelter.end],lty="dotted")
    if (grepl("twice", folder)) {
            abline(v=tvec[shelter.start]+365,lty="dashed")
            abline(v=tvec[shelter.end]+365,lty="dotted")
    }
    abline(h=1)
}
dev.off()

png(paste0("figures/twitter_monthly_timeseries_ratio_",folder,".png"),
    width = 4*1200, height =4*675,
    res=600,pointsize=10)
par(mfrow=c(1,1),
    mar = 0.1+c(0,0,0,0),
    oma = c(4,4,1,1))
cols <- viridis(5)
start <- 182 + 365*1
end <- 181 + 365*3
tvec <- seq(as.Date("2001-07-01"),by="1 day",length.out=end-start+1)
cols.alpha <- viridis(5, alpha=c(0.3, 0.3))
panels <- c("Jul","Aug","Sep","Oct","Nov","Dec",
            "Jan","Feb","March 1","Apr","May","Jun")
par(mar = 0.1+c(1,1,0,0))
i <- 9
shelter.start <- 1 + month.startday.vec[i]
shelter.end <- shelter.start + floor(3*365/12 + 0.5)
vector.control <- rollmean(med.mon.extra.ts[[folder]][,i],31,na.pad=T,align="center",fill=0)[start:end]
lockdown <- rollmean(med.mon.ts[[2]][,i],31,na.pad=T,align="center")[start:end]
vector.control[vector.control < 1e-10]  <- NA
ratio <- lockdown/vector.control
plot(tvec,ratio,
     type='l',log="y",
     ## ylim=c(0,1.1*max(upp.mon.ts[[2]][start:end])),
     xaxt="n",xlab="",ylab="",ylim=c(0.2,20),
     lwd=1)
mtext("Ratio of infections",2,3)
text(as.Date("2001-12-01"),
     0.3,panels[i],
     cex=1.2)
text(as.Date("2002-05-23"),
     3,"More\ndengue virus\ninfections",
     cex=1.2,font=2)
text(as.Date("2003-02-10"),
     0.5,"Fewer\ndengue virus\ninfections",
     cex=1.2,font=2)
mtext("Season",1,3)
axis(1,at=seq(as.Date(paste0("2002-01-01")),by="1 year",length.out=2),
     tick=F,labels=c("Sero. inv.",expression(italic("following"))))
axis(1,at=seq(as.Date(paste0("2001-07-01")),by="1 year",length.out=3),
     labels=F)
polygon.indexes <- !is.na(ratio)
polygon(c(tvec[shelter.start:shelter.end],rev(tvec[shelter.start:shelter.end])),
        c(rep(0.01,length(tvec[shelter.start:shelter.end])),
          rep(100,length(tvec[shelter.start:shelter.end]))),
        col=adjustcolor("gray",0.375),border=FALSE)
polygon(c(tvec[polygon.indexes],rev(tvec[polygon.indexes])),
        c(pmax(1,ratio[polygon.indexes]),rep(1,sum(polygon.indexes))),
        col=adjustcolor("green",0.25),border=FALSE)
polygon(c(tvec[polygon.indexes],rev(tvec[polygon.indexes])),
        c(pmin(1,ratio[polygon.indexes]),rep(1,length(tvec[polygon.indexes]))),
        col=adjustcolor("red",0.25),border=FALSE)
## abline(v=tvec[shelter.start],lty="dashed")
## abline(v=tvec[shelter.end],lty="dotted")
if (grepl("twice", folder)) {
    abline(v=tvec[shelter.start]+365,lty="dashed")
    abline(v=tvec[shelter.end]+365,lty="dotted")
}
abline(h=1)
text(as.Date("2003-01-10"),
     13,"Lockdown + no vector control\nNo lockdown + city-wide vector control",
     cex=1.2,font=1)
lines(c(as.Date("2002-08-01"),as.Date("2003-06-20")),
      rep(13,2))
lines(c(as.Date("2002-01-07"),as.Date("2002-03-01")),
      c(0.29,0.17))
lines(c(as.Date("2002-07-22"),as.Date("2003-06-30")),rep(9,2),lwd=3)
lines(c(as.Date("2002-07-22"),as.Date("2002-07-22")),c(9,18),lwd=3)
lines(c(as.Date("2002-07-22"),as.Date("2003-06-30")),rep(18,2),lwd=3)
lines(c(as.Date("2003-06-30"),as.Date("2003-06-30")),c(9,18),lwd=3)
dev.off()


## Plot vector control as ratio for the double spray
folder <- monthly.folders[grepl("vc",monthly.folders) & grepl("twice",monthly.folders)]
tiff(paste0("figures/monthly_timeseries_ratio_",folder,".tif"),
     width = 6*600, height =7.4*600,
     compression="lzw", res=600)
par(mfrow=c(4,3),
    mar = 0.1+c(0,0,0,0),
    oma = c(4,4,1,1))
cols <- viridis(5)
start <- 182 + 365*1
end <- 181 + 365*3
tvec <- seq(as.Date("2001-07-01"),by="1 day",length.out=end-start+1)
cols.alpha <- viridis(5, alpha=c(0.3, 0.3))
panels <- c("Jul","Aug","Sep","Oct","Nov","Dec",
            "Jan","Feb","Mar","Apr","May","Jun")
par(mar = 0.1+c(1,1,0,0))
for (i in 1:12){
    shelter.start <- 1 + month.startday.vec[i]
    shelter.end <- shelter.start + floor(3*365/12 + 0.5)
    vector.control <- rollmean(med.mon.extra.ts[[folder]][,i],31,na.pad=T,
                               align="center",fill=0)[start:end]
    lockdown <- rollmean(med.mon.extra.ts[[5]][,i],31,na.pad=T,align="center")[start:end]
    vector.control[vector.control < 1e-10]  <- NA
    ratio <- lockdown/vector.control
    if (i %in% c(1,4,7,10)) {
        plot(tvec,ratio,
             type='l',log="y",
             ## ylim=c(0,1.1*max(upp.mon.ts[[2]][start:end])),
             xaxt="n",xlab="",ylab="",ylim=c(0.2,20),
             lwd=1)
        mtext("Ratio of infections",2,3)
    } else {
        plot(tvec,ratio,
             type='l', log="y",ylim=c(0.2,20),
             ## ylim=c(0,1.1*max(upp.mon.ts[[2]][(start):end])),
             xaxt="n",xlab="",yaxt="n",ylab="",lwd=1)
    }
    if (i <=6) {
        text(as.Date("2003-04-01"),
             18,panels[i],
             cex=1.2)
    } else {
        text(as.Date("2001-09-01"),
             18,panels[i],
             cex=1.2)
    }
    if (i %in% 10:12) {
        mtext("Season",1,3)
        axis(1,at=seq(as.Date(paste0("2002-01-01")),by="1 year",length.out=2),
             tick=F,labels=c("Sero. inv.",expression(italic("following"))))
    }
    axis(1,at=seq(as.Date(paste0("2001-07-01")),by="1 year",length.out=3),
         labels=F)
    polygon.indexes <- !is.na(ratio)
    polygon(c(tvec[polygon.indexes],rev(tvec[polygon.indexes])),
            c(pmax(1,ratio[polygon.indexes]),rep(1,sum(polygon.indexes))),
            col=adjustcolor("green",0.25),border=FALSE)
    polygon(c(tvec[polygon.indexes],rev(tvec[polygon.indexes])),
            c(pmin(1,ratio[polygon.indexes]),rep(1,length(tvec[polygon.indexes]))),
            col=adjustcolor("red",0.25),border=FALSE)
    abline(v=tvec[shelter.start],lty="dashed")
    abline(v=tvec[shelter.end],lty="dotted")
    abline(h=1)
    if (grepl("twice", folder)) {
            abline(v=tvec[shelter.start]+365,lty="dashed")
            abline(v=tvec[shelter.end]+365,lty="dotted")
    }
}
dev.off()




### VC gap
folder <- monthly.folders[7]
tiff(paste0("figures/monthly_timeseries_",folder,".tif"),
     width = 6*600, height =7.4*600,
     compression="lzw", res=600)
height=4
layout(t(matrix(c(rep(1,9),rep(rep(2:4,each=3),height),
                  rep(rep(5:7,each=3),height),rep(rep(8:10,each=3),height),
                  rep(rep(11:13,each=3),height)),
                ncol=1+4*height)))
par(mar = 0.1+c(0,0,0,0),
    oma = c(4,4,0,1))
cols <- viridis(5)
start <- 182 + 365*1
end <- 181 + 365*3
tvec <- seq(as.Date("2001-07-01"),by="1 day",length.out=end-start+1)
cols.alpha <- viridis(5, alpha=c(0.3, 0.3))
panels <- c("0 months","1 month", paste(2:11, "months"))
plot(0, xaxt = 'n', yaxt = 'n', bty = 'n', pch = '', ylab = '', xlab = '')
legend("center",legend = c("No lockdown + vector control", "Lockdown + delayed vector control"),
       col=cols[c(1,3)], lty=1,bty="n",lwd=2,ncol=2,cex=1.25)
par(mar = 0.1+c(1,1,0,0))
for (i in 1:12){
    shelter.start <- 1 + 76 + 365 - 182
    shelter.end <- shelter.start + floor(3*365/12 + 0.5)
    if (i %in% c(1,4,7,10)) {
        plot(tvec,rollmean(med.mon.extra.ts[[2]][start:end,9],31,na.pad=T,align="center"),
             type='l', col=cols[1],
             ylim=c(0,1.1*max(upp.mon.extra.ts[[2]][start:end,9])),
             xaxt="n",xlab="",ylab="")
        mtext("Infections",2,3)
    } else {
        plot(tvec,rollmean(med.mon.extra.ts[[2]][start:end,9],31,na.pad=T,align="center"),
             type='l', col=cols[1],
             ylim=c(0,1.1*max(upp.mon.extra.ts[[2]][(start):end,9])),
             xaxt="n",xlab="",yaxt="n",ylab="")
    }
    text(as.Date("2003-02-01"),
         1.05*max(upp.mon.extra.ts[[2]][start:end,9]),panels[i],
         cex=1.2)
    if (i %in% 10:12) {
        mtext("Season",1,3)
        axis(1,at=seq(as.Date(paste0("2002-01-01")),by="1 year",length.out=2),
             tick=F,labels=c("Sero. inv.",expression(italic("following"))))
    }
    axis(1,at=seq(as.Date(paste0("2001-07-01")),by="1 year",length.out=3),
         labels=F)
    CI.col <- cols.alpha[1]
    polygon(c(tvec, rev(tvec)),
            c(rollmean(upp.mon.extra.ts[[2]][start:end,9],31,fill=0,na.pad=T,align="center"),
              rev(rollmean(low.mon.extra.ts[[2]][start:end,9],31,na.pad=T,align="center",
                           fill=0))),
            col=CI.col, border=NA)
    lines(tvec,rollmean(med.mon.extra.ts[[folder]][start:end,i],31,na.pad=T,align="center",fill=0),
          type='l', col=cols[3], lwd=1.5)
    CI.col <- cols.alpha[3] 
    polygon(c(tvec, rev(tvec)),
            c(rollmean(upp.mon.extra.ts[[folder]][start:end,i],31,fill=0,na.pad=T,align="center"),
              rev(rollmean(low.mon.extra.ts[[folder]][start:end,i],31,na.pad=T,
                           align="center",fill=0))),
            col=CI.col, border=NA)
    ## polygon(c(tvec[shelter.start:shelter.end],
    ##           rev(tvec[shelter.start:shelter.end])),
    ##         c(rep(0,shelter.end-shelter.start+1),
    ##           rep(2*max(med.none.ts),
    ##               shelter.end-shelter.start+1)),
    ##         col=adjustcolor("grey",alpha.f=0.5),border=F)
    abline(v=tvec[shelter.start],lty="dashed")
    abline(v=tvec[shelter.end],lty="dotted")
    if (grepl("twice", folder)) {
        abline(v=tvec[shelter.start]+365,lty="dashed")
        abline(v=tvec[shelter.end]+365,lty="dotted")
    }
}
dev.off()

